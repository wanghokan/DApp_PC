{"version":3,"sources":["NewProject.js","ItemUpload.js","Navbar.js","Toolbar.js","Newsheet.js","Inspect.js","Sheet.js","State.js","App.js","serviceWorker.js","index.js"],"names":["Content","Layout","ipfs","require","ipfsClient","host","port","protocol","NumberUpload","props","name","target","window","web3","Web3","ethereum","value","hex","utils","fromUtf8","setState","captureFile","event","preventDefault","file","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","state","onSubmit","add","error","a","createProject","hash","style","textAlign","fontSize","id","width","onChange","this","type","accept","onClick","Component","Option","Select","ItemUpload","itemsId","term","class","task","inspectionItems","ii","alert","confirm","uploadItem","projectName","disabled","defaultValue","Term","map","_Term","key","Class","_Class","Task","_Task","Navbar","backgroundColor","ghost","title","subTitle","size","column","Item","label","account","Toolbar","Menu","SubMenu","mode","defaultSelectedKeys","to","Newsheet","setContractor","Contractor","importItem","itemId","url","fetch","then","response","json","items","Items","itemsState","i","length","push","create","sheetId","location","Timing","sheetContent","_executor","createSheet","Location","_Location","dataSource","renderItem","item","Inspect","confirmed","sheet","contractor","toUtf8","_contractor","_timing","timing","_itemsState","_executed","executed","parseInt","itemsNote","data","inspectionItem","inspectedState","inspectState","_inspectedState","inspectNote","iN","send","d","Date","date","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","note","_note","fillSheet","pagination","columns","dataIndex","render","myRef","React","createRef","Sheet","search","index","falseNum","hashArray","_photo","split","isSearch","_executeTime","time","executor","itemsHash","is","executedState","export","document","body","getElementById","html2canvas","logging","letterRendering","allowTaint","useCORS","canvas","imgData","toDataURL","doc","jsPDF","addImage","save","outputAllow","border","ref","colSpan","align","height","src","State","loaded","array","first","children","j","second","k","third","l","forth","sheets","Sider","App","importWBS","project","contract","methods","projects","call","proj","wbshash","wbs","bind","sheet_state","loadWeb3","loadBlockchainData","enable","currentProvider","eth","getAccounts","accounts","net","getId","networksId","networkData","Contract","networks","abi","address","projectIndex","len","p","from","once","receipt","ipfshash","basename","theme","marginLeft","marginRight","className","exact","path","NewProject","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d0f0084.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Upload, Button, Icon, Layout, Input } from 'antd';\r\nimport Web3 from \"web3\";\r\n\r\nconst { Content } = Layout\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass NumberUpload extends Component{\r\n    \r\n    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            buffer: null,\r\n            name: null\r\n        }\r\n    }\r\n\r\n    name = ({target}) => {\r\n        window.web3 = new Web3(window.ethereum)\r\n        var name = target.value\r\n        var hex = window.web3.utils.fromUtf8(name)\r\n        this.setState({ name: hex })\r\n    }\r\n\r\n    captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n    }\r\n    \r\n    onSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Submitting file to ipfs...\")\r\n        ipfs.add(this.state.buffer, async(error, result) => {\r\n            console.log('Ipfs result', result)\r\n            if(error) {\r\n            console.error(error)\r\n            return\r\n            }\r\n            //let url = \"https://ipfs.infura.io/ipfs/\" + result[0].hash\r\n            //const wbs = await fetch(url).then(response => response.json())\r\n            //if(wbs.term != undefined && wbs.class != undefined && wbs.task != undefined && wbs.location != undefined){\r\n            //    console.log(\"ok\")\r\n            //}\r\n            //else{\r\n            //    console.log(\"error\")\r\n            //}\r\n            this.props.createProject(this.state.name, result[0].hash)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Content style={{ textAlign: \"center\" }}>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20 }}>建立專案</h1>\r\n                <p></p>\r\n                <span style={{ fontSize: 18 }}>工程名稱: </span>\r\n                <Input id=\"1\" style={{ width: 500 }} onChange={this.name}/>\r\n                <p></p>\r\n                <input type=\"file\" accept=\".json\" onChange={this.captureFile}/>\r\n                <span> </span>\r\n                <Button onClick={this.onSubmit}>\r\n                    上傳\r\n                </Button>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberUpload;","import React, { Component } from 'react';\r\nimport { Layout, Button, Input, Select, } from 'antd';\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass ItemUpload extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props)  \r\n\r\n        this.state = {\r\n            term: 0,\r\n            class: 0,\r\n            task: 0,\r\n            buffer: null,\r\n        }\r\n    }\r\n\r\n\r\n    captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n    }\r\n\r\n    onSubmit = async(event) => {\r\n        event.preventDefault()\r\n        const itemsId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task\r\n        let ii = await this.props.inspectionItems(itemsId)\r\n        if(this.state.buffer == null){\r\n            alert(\"請上傳查驗項目檔案\")\r\n        }\r\n        else{\r\n            if(ii != \"\"){\r\n                if(window.confirm(\"此工項查驗項目已上傳，是否取代？\")){\r\n                    console.log(\"Submitting file to ipfs...\")\r\n                    ipfs.add(this.state.buffer, (error, result) => {\r\n                    console.log('Ipfs result', result)\r\n                    if(error) {\r\n                        console.error(error)\r\n                        return\r\n                    }\r\n                    this.props.uploadItem(itemsId, result[0].hash)\r\n                    })\r\n                }\r\n                else{\r\n                    return\r\n                }\r\n            }\r\n            else{\r\n                console.log(\"Submitting file to ipfs...\")\r\n                ipfs.add(this.state.buffer, (error, result) => {\r\n                console.log('Ipfs result', result)\r\n                if(error) {\r\n                    console.error(error)\r\n                    return\r\n                }\r\n                    this.props.uploadItem(itemsId, result[0].hash)\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Content style={{ textAlign: \"center\" }}>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20 }}>匯入查驗項目</h1>\r\n                <p></p>\r\n                { (this.props.projectName == \"\")\r\n                ? \r\n                <div>\r\n                    <span style={{ fontSize: 16 }}>請先至首頁選擇專案</span>\r\n                </div>\r\n                :\r\n                <Content style={{ textAlign: \"center\" }}>\r\n                    <span style={{ fontSize: 18 }}>工程名稱: </span>\r\n                    <Input style={{ width: 300 }} disabled={true} value={this.props.projectName}/>\r\n                    <p></p>\r\n                    <span style={{ fontSize: 18 }}>工程類別: </span>\r\n                    <Select\r\n                        style={{ width: 300 }}\r\n                        onChange={(value) => this.setState({ term: value, class: 0, task: 0 })}\r\n                        defaultValue={this.state.term}\r\n                    >\r\n                        {this.props.Term.map((_Term, key) => \r\n                            <Option value={key} key={key}>{_Term}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <p></p>\r\n                    <span style={{ fontSize: 18 }}>工程項目: </span>\r\n                    <Select\r\n                        style={{ width: 300 }}\r\n                        onChange={(value) => this.setState({ class: value, task: 0 })}\r\n                        defaultValue={this.state.class}\r\n                    >\r\n                        {this.props.Class[this.props.Term[this.state.term]].map((_Class, key) =>\r\n                            <Option value={key} key={key}>{_Class}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <p></p>\r\n                    <span style={{ fontSize: 18 }}>細部工項: </span>\r\n                    <Select\r\n                        style={{ width: 300 }}\r\n                        onChange={(value) => this.setState({ task: value })}\r\n                        defaultValue={this.state.task}\r\n                    >\r\n                        {this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]].map((_Task, key) =>\r\n                            <Option value={key} key={key}>{_Task}</Option>\r\n                        )}\r\n                    </Select>\r\n                    <p></p>\r\n                    <input type=\"file\" onChange={this.captureFile}/>\r\n                    <Button onClick={this.onSubmit}>上傳</Button>\r\n                </Content>\r\n                }\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemUpload;","import React, { Component } from \"react\";\r\nimport { PageHeader, Descriptions } from 'antd';\r\n\r\nclass Navbar extends Component {\r\n    render(){\r\n        return(\r\n            <div\r\n                style={{\r\n                backgroundColor: \"#f0f2f5\",\r\n                }}\r\n            >\r\n                <PageHeader\r\n                ghost={false}\r\n                title=\"區塊鏈自主查驗系統\"\r\n                subTitle=\"prototype\"\r\n                >\r\n                <Descriptions size=\"small\" column={3}>\r\n                    <Descriptions.Item label=\"使用者\">{this.props.account}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"工程名稱\">{this.props.projectName}</Descriptions.Item>\r\n                </Descriptions>\r\n                </PageHeader>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Menu, Icon, Switch } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Toolbar extends Component{\r\n    render(){\r\n        return(\r\n            <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys=\"home\"\r\n            >\r\n                <Menu.Item key=\"home\" style={{ fontSize: 16 }}>\r\n                    <Link to=\"/\">\r\n                        首頁\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{ fontSize: 16 }}>\r\n                    <Link to=\"/newproject\">\r\n                    建立專案\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{ fontSize: 16 }}>\r\n                    <Link to=\"/itemupload\">\r\n                    匯入查驗項目\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{ fontSize: 16 }}>\r\n                    <Link to=\"/newsheet\">\r\n                    新增查驗表單\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{ fontSize: 16 }}>\r\n                    <Link to=\"/state\">\r\n                    檢視查驗狀態\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{ fontSize: 16 }}>\r\n                    <Link to=\"/sheet\">\r\n                    匯出查驗表單\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\nexport default Toolbar","import React, { Component } from \"react\";\r\nimport { Layout, Input, Form, Select, List, Button } from \"antd\";\r\nimport Web3 from \"web3\";\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass Newsheet extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            term: 0,\r\n            class: 0,\r\n            task: 0,\r\n            location: 0,\r\n            Items: [],\r\n            Contractor: \"\",\r\n            Timing: null,\r\n            itemsState: []\r\n        }\r\n    }\r\n\r\n    setContractor = ({target}) => {\r\n        window.web3 = new Web3(window.ethereum)\r\n        this.setState({ Contractor: window.web3.utils.fromUtf8(target.value) })\r\n    }\r\n\r\n    importItem = async() => {\r\n        let itemId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task\r\n        if(itemId == 0){\r\n            alert(\"請選擇工項\")\r\n        }\r\n        else{\r\n            let hash = await this.props.inspectionItems(itemId)\r\n            if(hash == \"\"){\r\n                alert(\"此工項尚未匯入查驗項目\")\r\n            }\r\n            else{\r\n                let url = \"https://ipfs.infura.io/ipfs/\" + hash\r\n                const items = await fetch(url).then(response => response.json())\r\n                this.setState({ Items: items })\r\n                const itemsState = []\r\n                for(var i = 0; i< this.state.Items.length; i++){\r\n                    itemsState.push(0)\r\n                }\r\n                this.setState({ itemsState })\r\n            }\r\n        }\r\n    }\r\n\r\n    create = async(event) => {\r\n        event.preventDefault()\r\n        let sheetId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location\r\n        if(sheetId == 0){\r\n            alert(\"請選擇工項\")\r\n        }\r\n        if(this.state.Items.length == 0){\r\n            alert(\"請匯入查驗項目\")\r\n        }\r\n        if(this.state.Contractor == \"\"){\r\n            alert(\"請輸入承包商名稱\")\r\n        }\r\n        if(this.state.Timing == null){\r\n            alert(\"請選擇查驗時機\")\r\n        }\r\n        else{\r\n            let sc = await this.props.sheetContent(sheetId)\r\n            if(sc._executor != \"0x0000000000000000000000000000000000000000\"){\r\n                alert(\"表單已建立\")\r\n            }\r\n            else{\r\n                this.props.createSheet(sheetId, this.state.itemsState, this.state.Timing, this.state.Contractor)\r\n            }\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Content>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20, textAlign: \"center\"}}>新增查驗表單</h1>\r\n                <p></p>\r\n                { (this.props.Term == null || this.props.Class == null || this.props.Task == null || this.props.Location == null)\r\n                    ? <h1 style={{ fontSize: 16, textAlign: \"center\" }}>請先至首頁選擇專案</h1>\r\n                    : <Content>\r\n                        <span style={{ fontSize: 16}}>基本資訊</span>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}>表單編號: </span>\r\n                        <Input style={{ width: 100 }} disabled={true} value={10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location}/>\r\n                        <span> </span>\r\n                        <span style={{ fontSize: 18}}>工程名稱: </span>\r\n                        <Input style={{ width: 300 }} disabled={true} value={this.props.projectName}/>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}>工程類別: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ term: value, class: 0, task: 0, location: 0 })}\r\n                            defaultValue={this.state.term}\r\n                        >\r\n                            {this.props.Term.map((_Term, key) => \r\n                                <Option value={key} key={key}>{_Term}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 工程項目: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ class: value, task: 0, location: 0 })}\r\n                            defaultValue={this.state.class}\r\n                        >\r\n                            {this.props.Class[this.props.Term[this.state.term]].map((_Class, key) =>\r\n                                <Option value={key} key={key}>{_Class}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 細部工項: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ task: value })}\r\n                            defaultValue={this.state.task}\r\n                        >\r\n                            {this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]].map((_Task, key) =>\r\n                                <Option value={key} key={key}>{_Task}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 施工位置: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ location: value })}\r\n                            defaultValue={this.state.task}\r\n                        >\r\n                            {this.props.Location[this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]][this.state.task]].map((_Location, key) =>\r\n                                <Option value={key} key={key}>{_Location}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}> 承攬廠商: </span>\r\n                        <Input style={{width: 500}} onChange={this.setContractor}/>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}> 檢查時機: </span>\r\n                        <Select style={{ width: 200 }} onChange={(value) => this.setState({ Timing: value })}>\r\n                            <Option value=\"0\" key=\"0\">檢驗停留點</Option>\r\n                            <Option value=\"1\" key=\"1\">施工中檢查</Option>\r\n                            <Option value=\"2\" key=\"2\">施工完成檢查</Option>\r\n                        </Select>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}>查驗項目: </span>\r\n                        <Button onClick={this.importItem}>\r\n                            匯入\r\n                        </Button>\r\n                        <p></p>\r\n                        <List dataSource={this.state.Items} renderItem={item => (\r\n                            <List.Item>{item}</List.Item>\r\n                        )}/>\r\n                        <p></p>\r\n                        <Button onClick={this.create}>\r\n                            新增\r\n                        </Button>\r\n                      </Content>\r\n                    }\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Newsheet;","import React, { Component } from \"react\";\r\nimport { Layout, Input, Form, Select, Table, Button } from \"antd\";\r\nimport Web3 from \"web3\";\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass Inspect extends Component{\r\n\r\n    importItem = async() => {\r\n        this.setState({ confirmed: true })\r\n        let itemId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task\r\n        let hash = await this.props.inspectionItems(itemId)\r\n        let url = \"https://ipfs.infura.io/ipfs/\" + hash\r\n        const items = await fetch(url).then(response => response.json())\r\n        let sheetId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location\r\n        const sheet = await this.props.sheetContent(sheetId)\r\n        window.web3 = new Web3(window.ethereum)\r\n        this.setState({ contractor: window.web3.utils.toUtf8(sheet._contractor) })\r\n        if(sheet._timing == 0){\r\n            this.setState({ timing: \"檢驗停留點\" })\r\n        }\r\n        if(sheet._timing == 1){\r\n            this.setState({ timing: \"施工中檢查\" })\r\n        }\r\n        if(sheet._timing == 2){\r\n            this.setState({ timing: \"施工完成檢查\" })\r\n        }\r\n        const itemsState = sheet._itemsState\r\n        if(sheet._executed == 0) {\r\n            this.setState({ executed: \"初驗\"})\r\n        }\r\n        if(sheet._executed >= 1) {\r\n            this.setState({ executed: \"複驗\"})\r\n        }\r\n        for(var i = 0; i < sheet._itemsState.length; i++){\r\n            itemsState[i] = parseInt(sheet._itemsState[i])\r\n        }\r\n        const Items = []\r\n        const itemsNote = []\r\n        for(var i = 0; i < items.length; i++){\r\n            itemsNote.push(\"\")\r\n            let data = {key: null, inspectionItem: null, state: null}\r\n            data.key = i\r\n            data.inspectionItem = items[i]\r\n            if(itemsState[i] == 0){\r\n                data.state = \"空白\"\r\n            }\r\n            if(itemsState[i] == 1){\r\n                data.state = \"合格\"\r\n            }\r\n            if(itemsState[i] == 2){\r\n                data.state = \"有缺失需改正\"\r\n            }\r\n            if(itemsState[i] == 3){\r\n                data.state = \"缺失立即改善\"\r\n            }\r\n            if(itemsState[i] == 4){\r\n                data.state = \"無此查驗項目\"\r\n            }\r\n            Items.push(data)\r\n        }\r\n        this.setState({ itemsNote })\r\n        this.setState({ Items })\r\n        this.setState({ inspectedState: itemsState })\r\n        \r\n    }\r\n\r\n    inspectState = (value) => {\r\n        const _inspectedState = this.state.inspectedState\r\n        _inspectedState[value[0]] = value[1]\r\n        this.setState({ inspectedState: _inspectedState })\r\n    }\r\n\r\n    inspectNote = ({ target: { id, value } }) => {\r\n        let iN = this.state.itemsNote\r\n        iN[id] = value\r\n        this.setState({ itemsNote: iN })\r\n        console.log(this.state.itemsNote)\r\n    }\r\n/*\r\n    uploadAnnex = (event) => {\r\n        let id = event.target.id\r\n        let buffer = null\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n            buffer = Buffer(reader.result)\r\n            console.log(buffer)\r\n            ipfs.add(buffer, (error, result) => {\r\n                console.log('Ipfs result', result)\r\n                if(error) {\r\n                console.error(error)\r\n                return\r\n                }\r\n                console.log(result[0].hash)\r\n                let iA = this.state.itemsAnnex\r\n                iA[id] = result[0].hash\r\n            })\r\n        }\r\n    }\r\n    */\r\n\r\n    send = () => {\r\n        window.web3 = new Web3(window.ethereum)\r\n        let sheetId = 10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location\r\n        let d = new Date()\r\n        let year = d.getFullYear().toString()\r\n        let month = (d.getMonth() + 1).toString()\r\n        let day = d.getDate().toString()\r\n        let hour = d.getHours().toString()\r\n        let min = d.getMinutes().toString()\r\n        let sec = d.getSeconds().toString()\r\n        let date = (year + \"/\" + month + \"/\" + day + \" \" + hour + \":\" + min + \":\" + sec)\r\n        let note = \"\"\r\n        for(var i = 0; i < this.state.itemsNote.length; i++){\r\n            if(i == (this.state.itemsNote.length-1)){\r\n                note += this.state.itemsNote[i]\r\n            }\r\n            else{\r\n                let s = this.state.itemsNote[i] + \"@\"\r\n                note += s\r\n            }\r\n        }\r\n        const _note = window.web3.utils.fromUtf8(note)\r\n        this.props.fillSheet(sheetId, this.state.inspectedState, date, _note)\r\n    }\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            term: 0,\r\n            class: 0,\r\n            task: 0,\r\n            location: 0,\r\n            Items: [],\r\n            executed: \"\",\r\n            confirmed: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Content>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20, textAlign: \"center\" }}>執行查驗</h1>\r\n                <p></p>\r\n                { (this.props.Term == null || this.props.Class == null || this.props.Task == null || this.props.Location == null)\r\n                    ? <h1 style={{ fontSize: 16, textAlign: \"center\" }}>請先至首頁選擇專案</h1>\r\n                    : <div>\r\n                        <span style={{ fontSize: 16}}>基本資訊</span>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}>表單編號: </span>\r\n                        <Input style={{ width: 100 }} disabled={true} value={10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location}/>\r\n                        <span> </span>\r\n                        <span style={{ fontSize: 18}}>工程名稱: </span>\r\n                        <Input style={{ width: 300 }} disabled={true} value={this.props.projectName}/>\r\n                        <p></p>\r\n                        <span style={{ fontSize: 18}}>工程大項: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ term: value, class: 0, task: 0, location: 0 })}\r\n                            defaultValue={this.state.term}\r\n                        >\r\n                            {this.props.Term.map((_Term, key) => \r\n                                <Option value={key}>{_Term}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 工程類別: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ class: value, task: 0, location: 0 })}\r\n                            defaultValue={this.state.class}\r\n                        >\r\n                            {this.props.Class[this.props.Term[this.state.term]].map((_Class, key) =>\r\n                                <Option value={key}>{_Class}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 項目名稱: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ task: value })}\r\n                            defaultValue={this.state.task}\r\n                        >\r\n                            {this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]].map((_Task, key) =>\r\n                                <Option value={key}>{_Task}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span style={{ fontSize: 18}}> 查驗位置: </span>\r\n                        <Select\r\n                            style={{ width: 200 }}\r\n                            onChange={(value) => this.setState({ location: value })}\r\n                            defaultValue={this.state.task}\r\n                        >\r\n                            {this.props.Location[this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]][this.state.task]].map((_Location, key) =>\r\n                                <Option value={key}>{_Location}</Option>\r\n                            )}\r\n                        </Select>\r\n                        <span> </span>\r\n                        <Button onClick={this.importItem}>\r\n                            確認\r\n                        </Button>\r\n                        <p></p>\r\n                        {(this.state.confirmed == false)\r\n                        ? <div></div>\r\n                        : <div>\r\n                            <span style={{ fontSize: 18}}> 承攬廠商: {this.state.contractor}</span>\r\n                            <p></p>\r\n                            <span style={{ fontSize: 18 }}>查驗時機: {this.state.timing}</span>\r\n                            <p></p>\r\n                            <span style={{ fontSize: 18 }}>查驗次數: {this.state.executed}</span>\r\n                            <p></p>\r\n                            <Table pagination={false}\r\n                                columns={[{title: \"查驗項目\", dataIndex: \"inspectionItem\"},\r\n                                        {title: \"查驗狀態\", dataIndex: \"state\"},\r\n                                        {title: \"查驗結果\", render: (item) => (\r\n                                            <Select style={{ width: 160 }} onChange={this.inspectState}>\r\n                                                <Option value={[item.key, 0]}>空白</Option>\r\n                                                <Option value={[item.key, 1]}>合格</Option>\r\n                                                <Option value={[item.key, 2]}>有缺失需改正</Option>\r\n                                                <Option value={[item.key, 3]}>缺失立即改善</Option>\r\n                                                <Option value={[item.key, 4]}>無此查驗項目</Option>\r\n                                            </Select>\r\n                                        )},\r\n                                        {title: \"備註\", render: (item) => (\r\n                                            <Input id={item.key} onChange={this.inspectNote}></Input>\r\n                                        )}]}\r\n                                dataSource={this.state.Items}/>\r\n                            <p></p>\r\n                            <Button onClick={this.send}>\r\n                                上傳\r\n                            </Button>\r\n                          </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inspect","import React, { Component } from \"react\";\r\nimport { Table, Layout, Select, Input, Button } from \"antd\";\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport Web3 from \"web3\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport html2canvas from \"html2canvas\";\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst myRef = React.createRef()\r\nconst option = {\r\n    orientation: 'l',\r\n    unit: 'pt',\r\n    format: 'a3'\r\n}\r\n\r\nclass Sheet extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            isSearch: false,\r\n            term: 0,\r\n            class: 0,\r\n            task: 0,\r\n            location: 0,\r\n            items: [],\r\n            itemsState: [],\r\n            time: null,\r\n            executor: null,\r\n            outputAllow: false,\r\n            hashArray: []\r\n        }\r\n    }\r\n\r\n    search = async() => {\r\n        window.web3 = new Web3(window.ethereum)\r\n        if(this.state.term == 0 || this.state.class == 0 || this.state.task == 0 || this.state.location == 0){\r\n            alert(\"請選擇工項\")\r\n        }\r\n        else{\r\n            this.setState({ index: (10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location) })\r\n            let sheet = await this.props.sheetContent(10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location)\r\n            if(sheet._executor == \"0x0000000000000000000000000000000000000001\"){\r\n                alert(\"表單尚未填寫\")\r\n            }\r\n            if(sheet._executor == \"0x0000000000000000000000000000000000000000\"){\r\n                alert(\"表單尚未建立\")\r\n            }\r\n            else{\r\n                let falseNum = 0\r\n                this.setState({ hashArray: window.web3.utils.toUtf8(sheet._photo).split(\"@\") })\r\n                for(var i = 0; i < sheet._itemsState.length; i++){\r\n                    if(sheet._itemsState[i] == 2) falseNum++\r\n                }\r\n                if((sheet._executed != 0) && (falseNum == 0)){\r\n                    this.setState({ isSearch: true })\r\n                    const _executeTime = window.web3.utils.toUtf8(sheet._executeTime)\r\n                    this.setState({ time: _executeTime })\r\n                    this.setState({ executor: sheet._executor })\r\n                    const _contractor = window.web3.utils.toUtf8(sheet._contractor)\r\n                    this.setState({ contractor: _contractor })\r\n                    const note = window.web3.utils.toUtf8(sheet._note)\r\n                    this.setState({ note: note.split(\"@\") })\r\n                    let itemsHash = await this.props.inspectionItems(10000000*this.state.term + 100000*this.state.class + 1000*this.state.task)\r\n                    let url = \"https://ipfs.infura.io/ipfs/\" + itemsHash\r\n                    let items = await fetch(url).then(response => response.json())\r\n                    let is = sheet._itemsState\r\n                    let itemsState = []\r\n                    for(var i = 0; i < is.length; i++){\r\n                        if(is[i] == 0){\r\n                            itemsState.push(\"空白\")\r\n                        }\r\n                        if(is[i] == 1){\r\n                            itemsState.push(\"合格\")\r\n                        }\r\n                        if(is[i] == 2){\r\n                            itemsState.push(\"有缺失需改正\")\r\n                        }\r\n                        if(is[i] == 3){\r\n                            itemsState.push(\"缺失立即改善\")\r\n                        }\r\n                        if(is[i] == 4){\r\n                            itemsState.push(\"無此查驗項目\")\r\n                        }\r\n                    }\r\n                    if(sheet._timing == 0){\r\n                        this.setState({ timing: \"檢驗停留點\" })\r\n                    }\r\n                    if(sheet._timing == 1){\r\n                        this.setState({ timing: \"施工中檢查\" })\r\n                    }\r\n                    if(sheet._timing == 2){\r\n                        this.setState({ timing: \"施工完成檢查\" })\r\n                    }\r\n                    if(sheet._executed == 1){\r\n                        this.setState({ executedState: \"初驗合格\" })\r\n                    }\r\n                    if(sheet._executed != 1){\r\n                        this.setState({ executedState: \"複驗合格\" })\r\n                    }\r\n                    this.setState({ items })\r\n                    this.setState({ itemsState })\r\n                }\r\n                else{\r\n                    alert(\"該項目尚未通過查驗\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export = () => {\r\n\r\n        console.log(document.body)\r\n        console.log(document.getElementById(\"myTable\"))\r\n        html2canvas(document.getElementById(\"myTable\"), { logging: true, letterRendering: 1,  allowTaint: false, useCORS: true }).then((canvas) => {\r\n            var imgData = canvas.toDataURL(\"image/png\")\r\n            var doc = new jsPDF()\r\n            doc.addImage(imgData, \"PNG\", 6, 5)\r\n            doc.save(this.state.index+\".pdf\")\r\n            //document.body.appendChild(canvas)\r\n        })\r\n        \r\n/*\r\n        const input = document.getElementById(\"test\")\r\n\r\n        console.log(document.body)\r\n        console.log(input)\r\n        html2canvas(input).then((canvas) => {\r\n            const imgData = canvas.toDataURL('image/jpeg', 1.0)\r\n            const pdf = new jsPDF('', 'pt', 'a4')\r\n            pdf.addImage(imgData, 'JPEG', 0, 0, 595.28, 592.28/canvas.width * canvas.height )\r\n            pdf.save(\"test.pdf\")\r\n        })\r\n        var doc = new jsPDF();\r\n        var x = document.getElementById(\"myTable\")\r\n        console.log(typeof x)\r\n        // Simple html example\r\n        //doc.autoTable({ html: \"#myTable\" });\r\n        //doc.save('test.pdf');\r\n\r\n        doc.html(x, {\r\n            callback: function (doc) {\r\n              doc.save(\"test.pdf\");\r\n            }\r\n         });\r\n         */\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Content>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20, textAlign: \"center\" }}>匯出查驗表單</h1>\r\n                <p></p>\r\n                    { (this.props.Term == null || this.props.Class == null || this.props.Task == null || this.props.Location == null)\r\n                        ? <h1 style={{ fontSize:16, textAlign: \"center\" }}>請先至首頁選擇專案</h1>\r\n                        : <div>\r\n                            <span style={{ fontSize: 16}}>基本資訊</span>\r\n                            <p></p>\r\n                            <span style={{ fontSize: 18}}>表單編號: </span>\r\n                            <Input style={{ width: 100 }} disabled={true} value={10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location}/>\r\n                            <span> </span>\r\n                            <span style={{ fontSize: 18}}>工程名稱: </span>\r\n                            <Input style={{ width: 300 }} disabled={true} value={this.props.projectName}/>\r\n                            <p></p>\r\n                            <span style={{ fontSize: 18}}>工程類別: </span>\r\n                            <Select\r\n                                style={{ width: 200 }}\r\n                                onChange={(value) => this.setState({ term: value, class: 0, task: 0, location: 0 })}\r\n                                defaultValue={this.state.term}\r\n                            >\r\n                                {this.props.Term.map((_Term, key) => \r\n                                    <Option value={key} key={key}>{_Term}</Option>\r\n                                )}\r\n                            </Select>\r\n                            <span style={{ fontSize: 18}}> 工程項目: </span>\r\n                            <Select\r\n                                style={{ width: 200 }}\r\n                                onChange={(value) => this.setState({ class: value, task: 0, location: 0 })}\r\n                                defaultValue={this.state.class}\r\n                            >\r\n                                {this.props.Class[this.props.Term[this.state.term]].map((_Class, key) =>\r\n                                    <Option value={key} key={key}>{_Class}</Option>\r\n                                )}\r\n                            </Select>\r\n                            <span style={{ fontSize: 18}}> 細部工項: </span>\r\n                            <Select\r\n                                style={{ width: 200 }}\r\n                                onChange={(value) => this.setState({ task: value })}\r\n                                defaultValue={this.state.task}\r\n                            >\r\n                                {this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]].map((_Task, key) =>\r\n                                    <Option value={key} key={key}>{_Task}</Option>\r\n                                )}\r\n                            </Select>\r\n                            <span style={{ fontSize: 18}}> 施工位置: </span>\r\n                            <Select\r\n                                style={{ width: 200 }}\r\n                                onChange={(value) => this.setState({ location: value })}\r\n                                defaultValue={this.state.task}\r\n                            >\r\n                                {this.props.Location[this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]][this.state.task]].map((_Location, key) =>\r\n                                    <Option value={key} key={key}>{_Location}</Option>\r\n                                )}\r\n                            </Select>\r\n                            <span> </span>\r\n                            <Button onClick={this.search}>\r\n                                確認\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                <p></p>\r\n                { ((this.state.isSearch))\r\n                   ?<div>\r\n                       <Button onClick={this.export}>匯出PDF</Button>\r\n                       <p></p>\r\n                       <div>\r\n                        <table border=\"1\" id=\"myTable\" ref={myRef} style={{ width: 600 }}>\r\n                                <tr>\r\n                                    <td colSpan=\"5\" align=\"center\">{this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]][this.state.task]+\"自主查驗表單 (\"+this.state.index+\")\"}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>工程名稱</td>\r\n                                    <td colSpan=\"3\">{this.props.projectName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>承攬廠商</td>\r\n                                    <td colSpan=\"3\">{this.state.contractor}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>查驗人員</td>\r\n                                    <td colSpan=\"3\">{this.state.executor}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>查驗時間</td>\r\n                                    <td colSpan=\"3\">{this.state.time}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>查驗位置</td>\r\n                                    <td colSpan=\"3\">{this.props.Location[this.props.Task[this.props.Class[this.props.Term[this.state.term]][this.state.class]][this.state.task]][this.state.location]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>查驗時機</td>\r\n                                    <td colSpan=\"3\">{this.state.timing}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>查驗狀態</td>\r\n                                    <td colSpan=\"3\">{this.state.executedState}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"5\" align=\"center\">查驗結果</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\" align=\"center\">查驗項目</td>\r\n                                    <td align=\"center\">查驗結果</td>\r\n                                    <td align=\"center\">備註</td>\r\n                                    <td align=\"center\">照片</td>\r\n                                </tr>\r\n                                {this.state.items.map((i, key) => {\r\n                                    return(\r\n                                        <tr key={key} height=\"125\">\r\n                                            <td colSpan=\"2\" style={{ width: 200 }}>{i}</td>\r\n                                            <td style={{ width: 100 }} align=\"center\">{this.state.itemsState[key]}</td>\r\n                                            <td style={{ width: 130 }} align=\"center\">{this.state.note[key]}</td>\r\n                                            <td style={{ width: 170 }} align=\"center\">\r\n                                                {(this.state.hashArray[key] == \"\")\r\n                                                ? <a></a>\r\n                                                : <img src={\"https://ipfs.infura.io/ipfs/\"+this.state.hashArray[key]} style={{ width: 160, height: 120 }}></img>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <td colSpan=\"5\"></td>\r\n                                    </tr>\r\n                                </tfoot>\r\n                        </table>\r\n                       </div>\r\n                    </div>\r\n                   :<div></div>\r\n                }\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sheet\r\n\r\n/*\r\n                       <Pdf targetRef={myRef} filename={this.state.index} x={6} y={5}>\r\n                        {({ toPdf }) => <Button onClick={toPdf}>匯出PDF</Button>}\r\n                       </Pdf>\r\n\r\n                        <ReactToExcel\r\n                            table=\"inspection sheet\"\r\n                            filename={(10000000*this.state.term + 100000*this.state.class + 1000*this.state.task + this.state.location).toString()}\r\n                            buttonText=\"Export\"\r\n                        />\r\n*/","import React, { Component } from \"react\";\r\nimport { Table, Layout, Input } from \"antd\";\r\n\r\nconst { Content } = Layout\r\n\r\nclass State extends Component{\r\n    async componentWillMount(){\r\n        if(this.props.projectName != \"\"){\r\n            let array = []\r\n            for(var i = 1; i < this.props.Term.length; i++){\r\n                let first  = { key: null, name: null, state: null, children: [] }\r\n                first.key = 10000000*i\r\n                first.name = this.props.Term[i]\r\n                for(var j = 1; j < this.props.Class[this.props.Term[i]].length; j++){\r\n                    let second = { key: null, name: null, state: null, children: [] }\r\n                    second.key = 10000000*i + 100000*j\r\n                    second.name = this.props.Class[this.props.Term[i]][j]\r\n                    for(var k = 1; k < this.props.Task[this.props.Class[this.props.Term[i]][j]].length; k++){\r\n                        let third = { key: null, name: null, state: null, children: [] }\r\n                        third.key = 10000000*i + 100000*j + 1000*k\r\n                        third.name = this.props.Task[this.props.Class[this.props.Term[i]][j]][k]\r\n                        for(var l = 1; l < this.props.Location[this.props.Task[this.props.Class[this.props.Term[i]][j]][k]].length; l++){\r\n                            let forth = { key: null, name: null, state: null }\r\n                            let sheets = await this.props.sheetContent(10000000*i + 100000*j + 1000*k + l)\r\n                            //console.log(this.props.Term[i])\r\n                            //console.log(this.props.Class[this.props.Term[i]][j])\r\n                            //console.log(this.props.Task[this.props.Class[this.props.Term[i]][j]][k])\r\n                            //console.log(this.props.Location[this.props.Task[this.props.Class[this.props.Term[i]][j]][k]][l])\r\n                            if(sheets._executor == \"0x0000000000000000000000000000000000000000\"){\r\n                                forth.state = \"表單尚未建立\"\r\n                            }\r\n                            else{\r\n                                if(sheets._executed == 0){\r\n                                    forth.state = \"表單已建立, 尚未執行查驗\"\r\n                                }\r\n                                else{\r\n                                    let falseNum = 0\r\n                                    for(var a = 0; a < sheets._itemsState.length; a++){\r\n                                        if(sheets._itemsState[a] == 2){\r\n                                            falseNum++\r\n                                        }\r\n                                    }\r\n                                    if(falseNum == 0){\r\n                                        forth.state = \"表單已建立, 已查驗, 無查驗項目不合格, 查驗時間: \" + window.web3.utils.toUtf8(sheets._executeTime) + \", 查驗人員: \" + sheets._executor.toString()\r\n                                    }\r\n                                    else{\r\n                                        forth.state = \"表單已建立, 已查驗, \" + falseNum.toString() + \"個查驗項目不合格, 查驗時間: \" + window.web3.utils.toUtf8(sheets._executeTime) + \", 查驗人員: \" + sheets._executor.toString()\r\n                                    }\r\n                                }\r\n                            }\r\n                            forth.key = 10000000*i + 100000*j + 1000*k + l\r\n                            forth.name = this.props.Location[this.props.Task[this.props.Class[this.props.Term[i]][j]][k]][l]\r\n                            third.children.push(forth)\r\n                        }\r\n                        second.children.push(third)\r\n                    }\r\n                    first.children.push(second)\r\n                }\r\n                array.push(first)\r\n            }\r\n            this.setState({ dataSource: array })\r\n            this.setState({ loaded: false })\r\n        }\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            dataSource: [],\r\n            loaded: true\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Content>\r\n                <p></p>\r\n                <h1 style={{ fontSize: 20, textAlign: \"center\" }}>檢視查驗狀態</h1>\r\n                <p></p>\r\n                {(this.props.projectName == \"\")\r\n                ? <div style={{ textAlign: \"center\" }}>\r\n                    <span style={{ fontSize: 16 }}>請先至首頁選擇專案</span>\r\n                  </div>\r\n                : <div>\r\n                    <span style={{ fontSize: 18}}>工程名稱: </span>\r\n                    <Input style={{ width: 300 }} disabled={true} value={this.props.projectName}/>\r\n                    <p></p>\r\n                    {(this.state.loaded)\r\n                    ? <div style={{ textAlign: \"center\" }}>\r\n                        <span style={{ fontSize: 16 }}>載入中...</span>\r\n                      </div>\r\n                    : <div>\r\n                        <Table columns={[{title: \"工項\", dataIndex: \"name\"}, {title: \"狀態\", dataIndex: \"state\"}]} dataSource={this.state.dataSource}/>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default State","import React, { Component } from \"react\";\nimport  { HashRouter, Route } from \"react-router-dom\";\nimport { Layout, Menu, Select, Button } from \"antd\";\nimport Navbar from \"./Navbar\";\nimport Toolbar from \"./Toolbar\";\nimport \"./App.css\";\nimport Contract from \"./contracts/TheContract.json\";\nimport Web3 from \"web3\";\nimport NewProject from \"./NewProject\";\nimport Newsheet from \"./Newsheet\";\nimport ItemUpload from \"./ItemUpload\";\nimport Inspect from \"./Inspect\";\nimport Sheet from \"./Sheet\";\nimport State from \"./State\";\n\nconst { Sider, Content } = Layout\nconst { Option } = Select\n\nclass App extends Component {\n  \n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    //var str = window.web3.utils.fromUtf8(\"@@@測試@這是測試@@\")\n    //console.log(str)\n    //console.log(window.web3.utils.toUtf8(str))\n    //console.log(window.location.href.toString())\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networksId = await web3.eth.net.getId()\n    const networkData = Contract.networks[networksId]\n    if(networkData) {\n      const contract = new web3.eth.Contract(Contract.abi, networkData.address)\n      const len = await contract.methods.projectIndex().call()\n      const projects = []\n      for(var i = 0; i < len; i++){\n        let p = await contract.methods.projects(i).call()\n        projects.push(web3.utils.toUtf8(p.name))\n      }\n      this.setState({ contract })\n      this.setState({ projects })\n    } else{\n      window.alert('AutonomousInspectIon contract not deployed to detected network.')\n    }\n  }\n\n  importWBS = async() => {\n    if(this.state.project == null){\n      alert(\"請先選擇專案\")\n    }\n    else{\n      let proj = await this.state.contract.methods.projects(this.state.project).call()\n      let wbshash = proj.wbs\n      let url = \"https://ipfs.infura.io/ipfs/\" + wbshash\n      const wbs = await fetch(url).then(response => response.json())\n      this.setState({ Term: wbs.term })\n      this.setState({ Class: wbs.class })\n      this.setState({ Task: wbs.task })\n      this.setState({ Location: wbs.location })\n      this.setState({ projectName: window.web3.utils.toUtf8(proj.name) })\n    }\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state={\n      account: null,\n      contract: null,\n      projects: [],\n      Term: null,\n      Class: null,\n      Task: null,\n      Location: null,\n      project: null,\n      projectName: \"\"\n    }\n\n    this.createSheet = this.createSheet.bind(this)\n    this.createProject = this.createProject.bind(this)\n    this.uploadItem = this.uploadItem.bind(this)\n    this.inspectionItems = this.inspectionItems.bind(this)\n    this.sheetContent = this.sheetContent.bind(this)\n    this.sheet_state = this.sheet_state.bind(this)\n    this.fillSheet = this.fillSheet.bind(this)\n  }\n\n  //智能合約中的function或data\n  //於區塊鏈上建立新的查驗表單，記錄表單編號及查驗項目個數\n  createSheet(sheetId, itemsState, timing, contractor){\n    this.state.contract.methods.createSheet(this.state.project, sheetId, itemsState, timing, contractor).send({ from: this.state.account }).once(\"receipt\", (receipt) => { console.log(\"receipt\") })\n  }\n  //於區塊鏈上紀錄已上傳至IPFS的WBS之HASH值\n  createProject(name, ipfshash){\n    this.state.contract.methods.createProject(name, ipfshash).send({ from: this.state.account }).once(\"receipt\", (receipt) => { console.log(\"receipt\") })\n  }\n  //於區塊鏈上紀錄已上傳至IPFS的查驗項目，紀錄對應工項及HASH值\n  uploadItem(itemId, ipfshash){\n    this.state.contract.methods.uploadItem(this.state.project, itemId, ipfshash).send({ from: this.state.account }).once(\"receipt\", (receipt) => { console.log(\"receipt\") })\n  }\n  //取得區塊鏈上某工項之查驗項目的HASH值\n  inspectionItems(itemId){\n    return this.state.contract.methods.inspectionItems(this.state.project, itemId).call()\n  }\n  //取得區塊鏈上某查驗表單的內容\n  sheetContent(sheetId){\n    return this.state.contract.methods.sheetContent(this.state.project, sheetId).call()\n  }\n  //取得區塊鏈上某查驗表單的各查驗項目之狀態\n  sheet_state(sheetId){\n    return this.state.contract.methods.sheet_state(sheetId).call()\n  }\n  //對區塊鏈上某查驗表單的內容進行修改(填表)\n  fillSheet(sheetId, state, date, note){\n    this.state.contract.methods.fillSheet(this.state.project, sheetId, state, date, note).send({ from: this.state.account }).once(\"receipt\", (receipt) => { console.log(\"receipt\") })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Navbar account={this.state.account} projectName={this.state.projectName}/>\n        <HashRouter basename=\"/\">\n        <Layout>\n          <Sider theme=\"light\">\n            <Toolbar/>\n          </Sider>\n          <Content style={{ marginLeft: 20, marginRight: 20 }} className=\"content\">\n            <div>\n                <Route exact path=\"/\">\n                  <p></p>\n                  <section style={{ textAlign: \"center\" }}>\n                    <h1 style={{ fontSize: 20 }}>首頁</h1>\n                    <span style={{ fontSize: 18 }}>請選擇專案: </span>\n                    <Select style={{ width: 500 }} onChange={(value) => this.setState({ project: value })}>\n                      {this.state.projects.map((p, k) =>\n                          <Option key={k} value={k}>{p}</Option>\n                      )}\n                    </Select>\n                    <span> </span>\n                    <Button style={{ width: 100 }} onClick={this.importWBS}>確認</Button>\n                  </section>\n                </Route>\n                <Route path=\"/newproject\">\n                  <NewProject createProject={this.createProject}/>\n                </Route>\n                <Route path=\"/itemupload\">\n                  <ItemUpload projectName={this.state.projectName} \n                              Term={this.state.Term} \n                              Class={this.state.Class} \n                              Task={this.state.Task} \n                              uploadItem={this.uploadItem}\n                              inspectionItems={this.inspectionItems}/>\n                </Route>\n                <Route path=\"/newsheet\">\n                  <Newsheet projectName={this.state.projectName} \n                            Term={this.state.Term} \n                            Class={this.state.Class} \n                            Task={this.state.Task} \n                            Location={this.state.Location} \n                            inspectionItems={this.inspectionItems}\n                            sheetContent={this.sheetContent}\n                            createSheet={this.createSheet}/>\n                </Route>\n                <Route path=\"/inspect\">\n                  <Inspect projectName={this.state.projectName}\n                          Term={this.state.Term}\n                          Class={this.state.Class} \n                          Task={this.state.Task} \n                          Location={this.state.Location} \n                          inspectionItems={this.inspectionItems}\n                          sheetContent={this.sheetContent}\n                          fillSheet={this.fillSheet}/>\n                </Route>\n                <Route path=\"/sheet\">\n                  <Sheet projectName={this.state.projectName}\n                        Term={this.state.Term} \n                        Class={this.state.Class}\n                        Task={this.state.Task} \n                        Location={this.state.Location} \n                        sheetContent={this.sheetContent}\n                        inspectionItems={this.inspectionItems}/>\n                </Route>\n                <Route path=\"/state\">\n                  <State Term={this.state.Term} \n                        Class={this.state.Class} \n                        Task={this.state.Task} \n                        Location={this.state.Location} \n                        sheetContent={this.sheetContent}\n                        projectName={this.state.projectName}/>\n                </Route>\n            </div>\n          </Content>          \n        </Layout>\n        </HashRouter>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n\n/*\n            <Route path=\"/photos\">\n              <Photos Term={this.state.Term} \n                      Class={this.state.Class} \n                      Task={this.state.Task} \n                      Location={this.state.Location}\n                      projectName={this.state.projectName}\n                      sheetContent={this.sheetContent}/>\n            </Route>\n            */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <App/>\n        </Switch>\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}